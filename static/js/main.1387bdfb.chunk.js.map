{"version":3,"sources":["components/App/App.styled.jsx","components/ContactsForm/ContactsForm.styled.jsx","components/Buttons/Buttons.styled.jsx","components/ContactsForm/ContactsForm.jsx","components/ContactsList/ContactsList.styled.jsx","components/ContactsList/ContactsList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/App/App.js","index.js"],"names":["PrimaryTitle","styled","h1","SecondaryTitle","h2","Form","form","Label","label","Input","input","Button","button","ContactsForm","state","name","number","handleChange","e","setState","currentTarget","target","value","handleSubmit","preventDefault","onSubmit","props","this","action","htmlFor","onChange","type","pattern","title","required","Component","List","ul","ListItem","li","ContactsList","contacts","deleteId","map","contact","id","onClick","Wrapper","div","Filter","getFilterName","App","filter","handleFilter","text","addContact","newContact","uuidv4","find","toLowerCase","Notify","warning","showContacts","lowerSymbol","includes","removeContact","storageContacts","localStorage","getItem","storageContactsParced","JSON","parse","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1387bdfb.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const PrimaryTitle = styled.h1`\r\nmargin-left: 75px;\r\ncolor: gray;\r\n`;\r\n\r\nexport const SecondaryTitle = styled.h2`\r\n  margin-left: 75px;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const Form = styled.form`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 40px;\r\n  padding: 30px;\r\n  border: none;\r\n  border-radius: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-size: 14px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;\r\n","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  width: fit-content;\r\n  padding: 10px;\r\n  margin-top: 8px;\r\n  font-size: 14px;\r\n  background-color: #0eebdc;\r\n  border: none;\r\n  border-radius: 10px;\r\n  &:hover,\r\n  &:active {\r\n    cursor: pointer;\r\n    background-color: #15c2b6;\r\n  }\r\n`;","import { Component } from \"react\";\r\nimport { Form, Label, Input} from './ContactsForm.styled';\r\nimport { Button } from '../Buttons/Buttons.styled';\r\n\r\nexport class ContactsForm extends Component {\r\n    state = {\r\n        name: \"\",\r\n        number: \"\",\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.currentTarget.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const { name, number } = this.state;\r\n        const { onSubmit } = this.props;\r\n\r\n        onSubmit(name, number);\r\n        this.setState({ name: \"\", number: \"\" });\r\n    };\r\n\r\n    render() {\r\n        const { handleSubmit, handleChange } = this;\r\n        const { name, number } = this.state;\r\n        return (\r\n            <Form action=\"\" onSubmit={handleSubmit}>\r\n                <Label htmlFor=\"name\">Name</Label>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={name}\r\n                    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n                    title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n                    required\r\n                />\r\n                <Label htmlFor=\"number\">Number</Label>\r\n                <Input\r\n                    onChange={handleChange}\r\n                    type=\"tel\"\r\n                    name=\"number\"\r\n                    value={number}\r\n                    pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n                    title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n                    required\r\n        />\r\n                <Button type=\"submit\"> Add contact</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const List = styled.ul`\r\n  list-style-type: circle;\r\n  margin-left: 20px;\r\n`;\r\n\r\nexport const ListItem = styled.li`\r\n  margin-top: 8px;\r\n  font-size: 18px;\r\n`;","import { List, ListItem } from \"./ContactsList.styled\";\r\nimport { Button } from '../Buttons/Buttons.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const ContactsList = ({ contacts, deleteId }) => {\r\n    return (\r\n        <div>\r\n            <List>\r\n                {contacts.map((contact) => {\r\n                    const { id, name, number } = contact;\r\n                    return (\r\n                        <ListItem key={id}>\r\n                            {name} - {number}{\" \"}\r\n                            <Button type=\"button\" onClick={() => deleteId(id)}>\r\n                                Delete\r\n                            </Button>\r\n                        </ListItem>\r\n                    )\r\n                })}\r\n            </List>\r\n        </div>\r\n    );\r\n};\r\n\r\nContactsList.propTypes = {\r\n    deleteId: PropTypes.func,\r\n    contacts: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string,\r\n            name: PropTypes.string,\r\n            number: PropTypes.string,\r\n        })\r\n    )\r\n    \r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Wrapper = styled.div`\r\n  display: inline-flex;\r\n  flex-direction: column;\r\n  margin-left: 60px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 4px;\r\n  margin-top: 4px;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  font-weight: 500;\r\n`;","import { Component } from \"react\";\r\nimport { Wrapper, Label, Input } from \"./Filter.styled\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport class Filter extends Component {\r\n    getFilterName = (e) => {\r\n        const { onChange } = this.props;\r\n\r\n        return onChange(e.currentTarget.value);\r\n    };\r\n\r\n    render() {\r\n        const { value } = this.props;\r\n        return (\r\n            <Wrapper>\r\n                <Label htmlFor=\"filter\">Find contacts by name</Label>\r\n                <Input\r\n                    type=\"text\"\r\n                    name=\"filter\"\r\n                    value={value}\r\n                    onChange={this.getFilterName}\r\n                />\r\n            </Wrapper>\r\n        );\r\n    };\r\n};\r\n\r\nFilter.propTypes = {\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n}","import { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { PrimaryTitle, SecondaryTitle } from \"./App.styled.jsx\";\nimport { ContactsForm } from \"../ContactsForm/ContactsForm.jsx\";\nimport { ContactsList } from \"../ContactsList/ContactsList.jsx\";\nimport { Filter } from \"../Filter/Filter.jsx\";\nimport { Notify} from \"notiflix\";\n\nexport class App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n    const storageContacts = localStorage.getItem(\"contacts\");\n    const storageContactsParced = JSON.parse(storageContacts);\n    if (storageContactsParced) {\n      this.setState({ contacts: storageContactsParced });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    if (prevState.contact !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\n    }\n  }\n\n  handleFilter = (text) => {\n    this.setState({ filter: text });\n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    const savedContacts = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase(),\n    );\n\n    if (savedContacts) {\n      Notify.warning(name + ' is already in contacts.')\n      return;\n    }\n\n    this.setState({\n          contacts: [newContact, ...contacts],\n    });\n    \n    \n  };\n\n  showContacts = () => {\n    const { filter, contacts } = this.state;\n    const lowerSymbol = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(lowerSymbol)\n    );\n  };\n\n  removeContact = (id) => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  render() {\n    const { handleFilter, addContact, showContacts, removeContact, state } =\n      this;\n\n    return (\n      <>\n        <PrimaryTitle>Phonebook</PrimaryTitle>\n        <ContactsForm onSubmit={addContact} />\n\n        <SecondaryTitle>Contacts</SecondaryTitle>\n        <Filter onChange={handleFilter} value={state.filter} />\n        <ContactsList contacts={showContacts()} deleteId={removeContact} />\n      </>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}